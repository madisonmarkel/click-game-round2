{"ast":null,"code":"import _objectSpread from \"/Users/madisonmarkel/Desktop/click-game/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/madisonmarkel/Desktop/click-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/madisonmarkel/Desktop/click-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/madisonmarkel/Desktop/click-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/madisonmarkel/Desktop/click-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/madisonmarkel/Desktop/click-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/madisonmarkel/Desktop/click-game/src/components/Game/index.js\";\nimport React, { Component } from \"react\";\nimport Container from \"../Container\";\nimport Photos from \"../Photos\";\nimport Header from \"../Header\";\nimport data from \"../../data\"; // STATEFUL\n//allows you to access all functions that comes with react components for stateful components\n\nvar Game =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Game, _Component);\n\n  function Game() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Game)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: data,\n      score: 0,\n      topScore: 0\n    };\n\n    _this.shuffleDeck = function (data) {\n      var newData = data.sort(function (a, b) {\n        return 0.5 - Math.random();\n      });\n      return newData;\n    };\n\n    _this.resetDeck = function (data) {\n      var resetData = data.map(function (item) {\n        return _objectSpread({}, item, {\n          clicked: false\n        });\n      }); // console.log(data);\n      // console.log(resetData);\n\n      return _this.shuffleDeck(resetData);\n    };\n\n    _this.correctGuess = function (newData) {\n      var newScore = _this.state.score;\n      newScore++;\n      var newTopScore = Math.max(newScore, _this.state.topScore);\n\n      _this.setState({\n        data: _this.shuffleDeck(newData),\n        score: newScore,\n        topScore: newTopScore\n      });\n    };\n\n    _this.wrongGuess = function (newData) {\n      _this.setState({\n        data: _this.resetDeck(newData),\n        score: 0\n      });\n    };\n\n    _this.gameCardClick = function (id) {\n      var guessedCorrectly = false; // newData will be the data array with updated clicked properties\n      //ITEM HERE IS THE PHOTO JSON IN DATA.JSON (DATA)\n\n      var newData = _this.state.data.map(function (item) {\n        if (item.id === id) {\n          if (!item.clicked) {\n            item.clicked = true;\n            guessedCorrectly = true;\n          }\n        }\n\n        return item;\n      }); // if guessedCorrectly = true, run the correctGuess function,\n      // else run the wrongGuess function\n\n\n      guessedCorrectly ? _this.correctGuess(newData) : _this.wrongGuess(newData);\n    };\n\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"componentDidMount\",\n    // function gets called when the page loads\n    value: function componentDidMount() {\n      // reorders the dataarray on state changes\n      this.setState({\n        data: this.shuffleDeck(this.state.data)\n      });\n    } // shuffle the imported data array in random order\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Header, {\n        score: this.state.score,\n        topScore: this.state.topScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.state.data.map(function (item) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Photos, {\n          key: item.id,\n          id: item.id,\n          image: item.image,\n          clicked: item.clicked,\n          handleClick: _this2.gameCardClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return Game;\n}(Component);\n\nexport default Game;","map":{"version":3,"sources":["/Users/madisonmarkel/Desktop/click-game/src/components/Game/index.js"],"names":["React","Component","Container","Photos","Header","data","Game","state","score","topScore","shuffleDeck","newData","sort","a","b","Math","random","resetDeck","resetData","map","item","clicked","correctGuess","newScore","newTopScore","max","setState","wrongGuess","gameCardClick","id","guessedCorrectly","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Container from \"../Container\";\nimport Photos from \"../Photos\";\nimport Header from \"../Header\";\nimport data from \"../../data\";\n\n// STATEFUL\n\n//allows you to access all functions that comes with react components for stateful components\nclass Game extends Component {\n\n    state = {\n        data,\n        score: 0,\n        topScore: 0,\n    };\n\n    // function gets called when the page loads\n    componentDidMount() {\n        // reorders the dataarray on state changes\n        this.setState({ data: this.shuffleDeck(this.state.data) });\n    }\n\n    // shuffle the imported data array in random order\n    shuffleDeck = data => {\n        let newData = data.sort(function(a, b){return 0.5 - Math.random()});\n        return newData;\n    };\n\n    // resets all the clicked properties to false\n    resetDeck = data => {\n        const resetData = data.map(item => ({ ...item, clicked: false }));\n        // console.log(data);\n        // console.log(resetData);\n        return this.shuffleDeck(resetData);\n      };\n\n    // checks to see if score is higher than the topscore then updates the state with the update array\n    correctGuess = newData => {\n        let newScore = this.state.score;\n        newScore++\n        let newTopScore = Math.max(newScore, this.state.topScore);\n\n        this.setState({\n            data: this.shuffleDeck(newData),\n            score: newScore,\n            topScore: newTopScore,\n        })\n    }\n\n    // restarts the game with fresh data\n    wrongGuess = newData => {\n        this.setState({\n            data: this.resetDeck(newData),\n            score: 0\n        })\n    }\n\n    // when a card is clicked, check if it has been clicked before,\n    // then update that cards clicked property\n    gameCardClick = id => {\n        let guessedCorrectly = false;\n        // newData will be the data array with updated clicked properties\n        //ITEM HERE IS THE PHOTO JSON IN DATA.JSON (DATA)\n        const newData = this.state.data.map(item => {\n          if (item.id === id) {\n            if (!item.clicked) {\n              item.clicked = true;\n              guessedCorrectly = true;\n            }\n          }\n          return item;     \n        });\n        // if guessedCorrectly = true, run the correctGuess function,\n        // else run the wrongGuess function\n        guessedCorrectly ? this.correctGuess(newData) : this.wrongGuess(newData);\n      };\n\n    render() {\n        return (\n            <div>\n                <Header score={this.state.score} topScore = {this.state.topScore} />\n                <Container>\n                    {\n                        this.state.data.map(item => (\n                            <div>\n                                <Photos\n                                    key={item.id}\n                                    id={item.id} \n                                    image={item.image}\n                                    clicked={item.clicked}\n                                    handleClick={this.gameCardClick}\n                                />      \n                            </div>  \n                        ))\n                    }\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}