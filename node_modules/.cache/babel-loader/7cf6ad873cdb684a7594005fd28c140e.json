{"ast":null,"code":"import _classCallCheck from \"/Users/madisonmarkel/Desktop/click-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/madisonmarkel/Desktop/click-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/madisonmarkel/Desktop/click-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/madisonmarkel/Desktop/click-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/madisonmarkel/Desktop/click-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/madisonmarkel/Desktop/click-game/src/components/Status/index.js\";\nimport React, { Component } from \"react\";\nimport \"./Status.css\"; // STATEFUL \n\nvar Status =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Status, _Component);\n\n  function Status() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Status);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Status)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      message: \"\" // function runs on every state change\n      // prevProps = props are header components that is equal to state\n      // you can access parents states\n\n    };\n\n    _this.renderMessage = function () {\n      switch (_this.state.message) {\n        case \"win\":\n          return \"You Won!\";\n\n        case \"correct\":\n          return \"Correctomundo!\";\n\n        case \"incorrect\":\n          return \"Incorrectomundo!\";\n\n        default:\n          return \"Only click an artist once. Good luck!\";\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Status, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // will be passed into setState function\n      var newState = {}; // deconstruct score and topScore from the previous state\n\n      var score = prevProps.score,\n          topScore = prevProps.topScore; // change message if user guess correclty or incorrectly\n\n      if (score === 0 && topScore === 0) {\n        newState.message = \"\";\n      } else if (score !== 0 && topScore > 0) {\n        newState.message = \"correct\";\n      } else if (score === 12 && topScore === 12) {\n        newState.message = \"win\";\n      } else {\n        newState.message = \"incorrect\";\n      } // set the state with the new message if the score changes, \n      // or the message and state message are not equal\n\n\n      if (score !== this.props.score || this.state.message !== newState.message) {\n        this.setState(newState);\n      }\n    } // change the display message based on the message state\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"li\", {\n        id: \"\".concat(this.state.message),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.renderMessage());\n    }\n  }]);\n\n  return Status;\n}(Component);\n\nexport default Status;","map":{"version":3,"sources":["/Users/madisonmarkel/Desktop/click-game/src/components/Status/index.js"],"names":["React","Component","Status","state","message","renderMessage","prevProps","newState","score","topScore","props","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,cAAP,C,CAEA;;IAEMC,M;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,OAAO,EAAE,EADL,CAIR;AACA;AACA;;AANQ,K;;UAmCRC,a,GAAgB,YAAM;AAClB,cAAQ,MAAKF,KAAL,CAAWC,OAAnB;AACA,aAAK,KAAL;AACE,iBAAO,UAAP;;AACF,aAAK,SAAL;AACE,iBAAO,gBAAP;;AACF,aAAK,WAAL;AACE,iBAAO,kBAAP;;AACF;AACE,iBAAO,uCAAP;AARF;AAUH,K;;;;;;;uCAvCkBE,S,EAAW;AAE5B;AACA,UAAIC,QAAQ,GAAG,EAAf,CAH4B,CAK5B;;AAL4B,UAMrBC,KANqB,GAMFF,SANE,CAMrBE,KANqB;AAAA,UAMdC,QANc,GAMFH,SANE,CAMdG,QANc,EAQ5B;;AACA,UAAID,KAAK,KAAK,CAAV,IAAeC,QAAQ,KAAK,CAAhC,EAAmC;AACjCF,QAAAA,QAAQ,CAACH,OAAT,GAAmB,EAAnB;AACD,OAFD,MAEO,IAAII,KAAK,KAAK,CAAV,IAAeC,QAAQ,GAAG,CAA9B,EAAiC;AACtCF,QAAAA,QAAQ,CAACH,OAAT,GAAmB,SAAnB;AACD,OAFM,MAEA,IAAII,KAAK,KAAK,EAAV,IAAgBC,QAAQ,KAAK,EAAjC,EAAqC;AAC1CF,QAAAA,QAAQ,CAACH,OAAT,GAAmB,KAAnB;AACD,OAFM,MAEA;AACLG,QAAAA,QAAQ,CAACH,OAAT,GAAmB,WAAnB;AACD,OAjB2B,CAmB5B;AACA;;;AACA,UAAII,KAAK,KAAK,KAAKE,KAAL,CAAWF,KAArB,IAA8B,KAAKL,KAAL,CAAWC,OAAX,KAAuBG,QAAQ,CAACH,OAAlE,EAA2E;AACzE,aAAKO,QAAL,CAAcJ,QAAd;AACD;AAEF,K,CAED;;;;6BAcS;AACL,aACE;AACE,QAAA,EAAE,YAAK,KAAKJ,KAAL,CAAWC,OAAhB,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGG,KAAKC,aAAL,EAHH,CADF;AAOH;;;;EA1DgBJ,S;;AA6DrB,eAAeC,MAAf","sourcesContent":["import React, {Component} from \"react\";\nimport \"./Status.css\";\n\n// STATEFUL \n\nclass Status extends Component {\n\n    state = {\n        message: \"\"\n    }\n\n    // function runs on every state change\n    // prevProps = props are header components that is equal to state\n    // you can access parents states\n    componentDidUpdate(prevProps) {\n\n      // will be passed into setState function\n      let newState = {}\n\n      // deconstruct score and topScore from the previous state\n      const {score, topScore} = prevProps\n\n      // change message if user guess correclty or incorrectly\n      if (score === 0 && topScore === 0) {\n        newState.message = \"\";\n      } else if (score !== 0 && topScore > 0) {\n        newState.message = \"correct\";\n      } else if (score === 12 && topScore === 12) {\n        newState.message = \"win\";\n      } else {\n        newState.message = \"incorrect\";\n      }\n\n      // set the state with the new message if the score changes, \n      // or the message and state message are not equal\n      if (score !== this.props.score || this.state.message !== newState.message) {\n        this.setState(newState);\n      }\n  \n    }\n\n    // change the display message based on the message state\n    renderMessage = () => {\n        switch (this.state.message) {\n        case \"win\":\n          return \"You Won!\";\n        case \"correct\":\n          return \"Correctomundo!\";\n        case \"incorrect\":\n          return \"Incorrectomundo!\";\n        default:\n          return \"Only click an artist once. Good luck!\";\n        }\n    };\n\n    render() {\n        return(\n          <li \n            id={`${this.state.message}`}\n          >\n            {this.renderMessage()}\n          </li>  \n        );\n    }\n}\n\nexport default Status;"]},"metadata":{},"sourceType":"module"}